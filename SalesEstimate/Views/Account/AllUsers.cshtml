@model IEnumerable<SalesEstimate.Identity.ApplicationUser>

@{
    ViewData["Title"] = "All Users";
}

<h2>All Users</h2>

<table id="Datatable" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Phone Number</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Street Address</th>
            <th>City</th>
            <th>State</th>
            <th>Postal Code</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@user.PhoneNumber</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.StreetAddress</td>
                <td>@user.City</td>
                <td>@user.State</td>
                <td>@user.PostalCode</td>
                <td>
                    <a href="#" class="btn btn-warning btn-sm" data-id="@user.Id" data-bs-toggle="modal" data-bs-target="#editUserModal">
                        <i class="fa fa-edit"></i>
                    </a>

                    <a href="#" class="btn btn-danger btn-sm delete-user" data-id="@user.Id">
                        <i class="fa fa-trash-alt"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Bootstrap 5 Modal for Editing User -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="userId" name="Id" />
                    <div class="mb-3">
                        <label for="userName" class="form-label">Username</label>
                        <input type="text" class="form-control" id="userName" name="UserName" required />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="Email" required />
                    </div>
                    <div class="mb-3">
                        <label for="phoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" name="PhoneNumber" />
                    </div>
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="firstName" name="FirstName" />
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="lastName" name="LastName" />
                    </div>
                    <div class="mb-3">
                        <label for="streetAddress" class="form-label">Street Address</label>
                        <input type="text" class="form-control" id="streetAddress" name="StreetAddress" />
                    </div>
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="City" />
                    </div>
                    <div class="mb-3">
                        <label for="state" class="form-label">State</label>
                        <input type="text" class="form-control" id="state" name="State" />
                    </div>
                    <div class="mb-3">
                        <label for="postalCode" class="form-label">Postal Code</label>
                        <input type="text" class="form-control" id="postalCode" name="PostalCode" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('.btn-warning').click(function () {
                var userId = $(this).data('id'); // Retrieve the user ID

                $.ajax({
                    url: '@Url.Action("GetUserDetails", "Account")',
                    type: 'GET',
                    data: { id: userId },
                    success: function (user) {
                        if (user) {
                            // Populate the form fields with the user data
                            $('#userId').val(user.id); // Adjust property names if necessary
                            $('#userName').val(user.userName);
                            $('#email').val(user.email);
                            $('#phoneNumber').val(user.phoneNumber);
                            $('#firstName').val(user.firstName);
                            $('#lastName').val(user.lastName);
                            $('#streetAddress').val(user.streetAddress);
                            $('#city').val(user.city);
                            $('#state').val(user.state);
                            $('#postalCode').val(user.postalCode);

                            // Show the modal
                            $('#editUserModal').modal('show');
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'User not found',
                                text: 'The user details could not be retrieved.'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to retrieve user details.'
                        });
                    }
                });
            });

            $('#editUserForm').submit(function (e) {
                e.preventDefault();

                $.ajax({
                    url: '@Url.Action("EditRegisteredUser", "Account")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: 'User updated successfully.'
                            }).then(() => {
                                location.reload(); // Reload the page or update the UI as needed
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Update Failed',
                                text: 'Failed to update user.'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to update user.'
                        });
                    }
                });
            });
            $('.delete-user').click(function (e) {
                e.preventDefault();
                var userId = $(this).data('id'); // Retrieve the user ID

                Swal.fire({
                    title: 'Are you sure?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Delete", "Account")', // Adjust controller and action if needed
                            type: 'POST',
                            data: { id: userId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Deleted!',
                                        'User has been deleted.',
                                        'success'
                                    ).then(() => {
                                        location.reload(); // Reload the page or update the UI as needed
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Delete Failed',
                                        text: 'Failed to delete user.'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Failed to delete user.'
                                });
                            }
                        });
                    }
                });
            });
        });
        $(document).ready(function () {
            $('#Datatable').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                pageLength: 10,
                lengthMenu: [10, 25, 50, 100],
                language: {
                    lengthMenu: "Show _MENU_ entries per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    search: "Search:",
                },
            });
        });
    </script>

}